{
    "name": "Fast Gene Set Enrichment Analysis (fgsea)", 
    "description": "Execute gene set enrichment analysis following a differential expression analysis.", 
    "inputs": {
        "dge_results": {
            "description": "A table of diffential expression results. Must have \"logFC\" and \"pval\" columns to rank the hits.", 
            "name": "Differential expression results:", 
            "required": true, 
            "converter": "api.converters.data_resource.LocalDockerSingleDataResourceConverter",
            "spec": {
                "attribute_type": "DataResource", 
                "resource_type": "FT", 
                "many": false
            }
        }, 
        "organism": {
            "description": "The organism/genome for your results.", 
            "name": "Genome/organism:", 
            "required": true, 
            "converter": "api.converters.basic_attributes.StringConverter",
            "spec": {
                "attribute_type": "OptionString",
                "options": ["Human", "Mouse"]
            }
        },
        "gene_set_database": {
            "description": "The gene set database. Each database contains multiple sets of genes relevant to a pathway, biological function, or other process.", 
            "name": "Gene set database:", 
            "required": true, 
            "converter": "api.converters.basic_attributes.UnrestrictedStringConverter",
            "spec": {
                "attribute_type": "OptionString",
                "options": ["MSigDB Hallmark", "Reactome", "WikiPathways", "Ontology - Biological process", "Ontology - Molecular function", "Ontology - Cellular component", "(Human only) Oncogenic signatures", "(Human only) ImmuneSigDB"]
            }
        },
        "gene_id_choice": {
            "description": "The type of identifier for the genes in your differential expression file. If it's the \"common\" name (like TP53, BCL2), then choose \"Symbol\".", 
            "name": "Gene ID type:", 
            "required": true,
            "converter": "api.converters.basic_attributes.StringConverter", 
            "spec": {
                "attribute_type": "OptionString",
                "options": ["Symbol", "Refseq", "Ensembl"],
                "default": "Symbol"
            }
        }
    }, 
    "outputs": {
        "pathway_results": {
            "required": true,
            "converter": "api.converters.data_resource.LocalDockerSingleDataResourceConverter",
            "spec": {
                "attribute_type": "DataResource", 
                "resource_type": "JSON",
                "many": false
            }
        }
    }, 
    "mode": "local_docker",
    "workspace_operation": true
}
